//
//  YTPlayerViewController.swift
//  player
//
//  Created by Warakorn T on 26/3/2567 BE.
//  Copyright (c) 2567 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import youtube_ios_player_helper

protocol YTPlayerDisplayLogic: class {
    func displayLoadYoutubeVideo(viewModel: YTPlayer.LoadYoutubeVideo.ViewModel)
}

class YTPlayerViewController: UIViewController, YTPlayerDisplayLogic {
    var interactor: YTPlayerBusinessLogic?
    var router: (NSObjectProtocol & YTPlayerRoutingLogic & YTPlayerDataPassing)?
    
    // MARK: Object lifecycle
    @IBOutlet weak var playerView: YTPlayerView!
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = YTPlayerInteractor()
        let presenter = YTPlayerPresenter()
        let router = YTPlayerRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        let request = YTPlayer.LoadYoutubeVideo.Request(id: "YDWM0RRkyzI")
        interactor?.loadYoutubeVideo(request: request)
    }
    
    func displayLoadYoutubeVideo(viewModel: YTPlayer.LoadYoutubeVideo.ViewModel) {
        playerView.load(withVideoId: viewModel.id)
    }
}
